<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.x-dev@">
  <file src="src/ReflectionMapper.php">
    <MixedInferredReturnType occurrences="2">
      <code>?ReflectionType</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$functionOrMethod-&gt;getTentativeReturnType()</code>
      <code>$functionOrMethod-&gt;hasTentativeReturnType()</code>
    </MixedReturnStatement>
    <TypeDoesNotContainType occurrences="1">
      <code>assert($returnType instanceof ReflectionNamedType || $returnType instanceof ReflectionUnionType || $returnType instanceof ReflectionIntersectionType)</code>
    </TypeDoesNotContainType>
    <UndefinedClass occurrences="3">
      <code>$returnType</code>
      <code>ReflectionIntersectionType</code>
      <code>ReflectionIntersectionType</code>
    </UndefinedClass>
  </file>
  <file src="src/type/IntersectionType.php">
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$types</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/type/ObjectType.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;className-&gt;qualifiedName()</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/type/SimpleType.php">
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>value</code>
    </MissingReturnType>
  </file>
  <file src="src/type/StaticType.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;className-&gt;qualifiedName()</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/type/Type.php">
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/type/UnionType.php">
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$types</code>
    </MixedPropertyTypeCoercion>
  </file>
</files>
